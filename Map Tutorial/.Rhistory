, axis.ticks = element_blank()
)
p <- p + labs(title = "UNM Walk around campus")
print(p)
setwd("C:/Users/derek/Documents/R Scripts/Map Tutorial")
library(ggplot2)
library(ggmap)
library(mapproj)
dat <- read.table(text = "
location lat long
MathStat 35.08396 -106.62410
Ducks 35.08507 -106.62238
SC1Class 35.08614 -106.62349
Biology 35.08243 -106.62296
CSEL 35.08317 -106.62414
", header = TRUE)
map <- get_map(
location = "University of New Mexico", zoom = 16, maptype = "roadmap")
p <- ggmap(map)
p <- p + geom_point(data = dat, aes(x = long, y = lat, shape = location, colour = location)
, size = 7)
p <- p + geom_text(data = dat, aes(x = long, y = lat, label = location), hjust = -0.2)
# legend positioning, removing grid and axis labeling
p <- p + theme( legend.position = "none" # remove legend
, panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
p <- p + labs(title = "UNM SC1 locations")
print(p)
p
p <- ggmap(map)
p
p <- p + geom_point(data = dat, aes(x = long, y = lat, shape = location, colour = location)
, size = 7)
p
coffee.shops <- read.csv(text = "
Name|Address
Annapurnas World Vegetarian Cafe|2201 Silver Avenue Southeast, Albuquerque, NM 87106
Dunkin Donuts|1902 Central Avenue Southeast, Albuquerque, NM 87106
Flying Star Cafe|3416 Central Avenue Southeast, Albuquerque, NM 87106
Limonata|3220 Silver Avenue Southeast, Albuquerque, NM 87106
Satellite Coffee|2300 Central Avenue Southeast, Albuquerque, New Mexico 87106
Satellite Coffee|3513 Central Avenue Northeast, Albuquerque, NM 87106
Starbucks|3400 Central Avenue Southeast, Albuquerque, NM 87106
Winning Coffee Co.|111 Harvard Drive Southeast, Albuquerque, NM 87106
", sep = "|", strip.white = TRUE, stringsAsFactors = FALSE)
coffee.shops
View(coffee.shops)
home <- c(-106.624147, 35.083921)
library(plyr)
cs.dist <- ddply(coffee.shops, .(Name,Address)
, .fun = function(X) {
map.dist <- mapdist(from = home
, to = X$Address
, mode = "bicycling"
, output = "all"
)
out <- data.frame(distance.text = map.dist[[1]][[1]]$distance$text
, distance.value = map.dist[[1]][[1]]$distance$value
, duration.text = map.dist[[1]][[1]]$duration$text
, duration.value = map.dist[[1]][[1]]$duration$value)
})
distQueryCheck()
map.center <- data.frame(lon = -106.6133, lat = 35.0811)
map.coffee <- geocode(cs.dist$Address)
map.coffee
cs.dist2 <- cbind(cs.dist, map.coffee)
df.home <- data.frame("Math&Stat"
, "University of New Mexico"
, NA, NA, NA, NA
, home[1]
, home[2])
colnames(df.home) <- colnames(cs.dist2)
cs.dist3 <- rbind(cs.dist2, df.home)
map <- get_googlemap(
center = as.numeric(map.center)
, zoom = 15 # larger is closer
, maptype = "roadmap" # map type
, markers = cs.dist3[,c("lon","lat")] # markers for map
, scale = 2
)
p <- ggmap(map, extent = "device", darken = 0)
p <- p + geom_rect(data = cs.dist3, aes(xmin = lon, ymin = lat, xmax = lon+.004, ymax = lat+.001, fill = duration.value, colour = distance.value), size = 1)
p <- p + geom_text(data = cs.dist3, aes(x = lon, y = lat, label = Name)
, hjust = 0, vjust = -1, size = 3, colour = "white")
p <- p + theme( panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
p <- p + labs(title = "UNM Bike to Coffee shops")
print(p)
library(scales) # for muted graphics
str(crime)
data<-crime
# Extract location of crimes in houston
violent_crimes <- subset(crime, ((offense != "auto theft")
& (offense != "theft")
& (offense != "burglary")))
# rank violent crimes
violent_crimes$offense <- factor(violent_crimes$offense
, levels = c("robbery", "aggravated assault"
, "rape", "murder"))
# restrict to downtown
violent_crimes <- subset(violent_crimes, ((-95.39681 <= lon)
& (lon <= -95.34188)
& (29.73631 <= lat)
& (lat <= 29.784)))
map <- get_map( location = "Houston TX"
, zoom = 14
, maptype = "roadmap"
, color = "bw" # make black & white so color is data
)
p <- ggmap(map)
p <- p + geom_point(data = violent_crimes
, aes(x = lon, y = lat, size = offense, colour = offense))
p <- p + theme( legend.position = c(0.0, 0.7) # put the legend inside the plot area
, legend.justification = c(0, 0)
, legend.background = element_rect(colour = F, fill = "white")
, legend.key = element_rect(fill = F, colour = F)
, panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
print(p)
theme_set(theme_bw(16))
HoustonMap <- qmap("houston", zoom = 14, color = "bw", legend = "topleft")
HoustonMap +
geom_point(aes(x = lon, y = lat, colour = offense, size = offense),
data = violent_crimes)
HoustonMap +
stat_bin2d(
aes(x = lon, y = lat, colour = offense, fill = offense),
size = .5, bins = 30, alpha = 1/2,
data = violent_crimes
)
p <- ggmap(map)
overlay <- stat_density2d(data = violent_crimes
, aes(x = lon, y = lat, fill = ..level.. , alpha = ..level..)
, size = 2, bins = 4, geom = "polygon")
p <- p + overlay
p <- p + scale_fill_gradient2("Violent Crime Density", low = "white", mid = "yellow", high = "red")
p <- p + scale_alpha(range = c(0.4, 0.75), guide = FALSE)
p <- p + guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
#p <- p + inset(grob = ggplotGrob(ggplot() + overlay + theme_inset())
# , xmin = -95.35836, xmax = Inf, ymin = -Inf, ymax = 29.75062)
print(p)
p <- p + facet_wrap( ~ day, nrow = 2)
print(p)
library(ggplot2)
library(plyr)
troops <- read.table("http://stat405.had.co.nz/data/minard-troops.txt", header=T)
cities <- read.table("http://stat405.had.co.nz/data/minard-cities.txt", header=T)
russia <- map_data("world", region = "USSR")
p <- ggplot(troops, aes(long, lat))
p <- p + geom_polygon(data = russia, aes(x = long, y = lat, group = group)
, fill = "white")
p <- p + geom_path(aes(size = survivors, colour = direction, group = group)
, lineend = "round")
p <- p + geom_text(data = cities, aes(label = city), size = 3)
p <- p + scale_size(range = c(1, 6)
, breaks = c(1, 2, 3) * 10^5
, labels = c(1, 2, 3) * 10^5)
p <- p + scale_colour_manual(values = c("bisque2", "grey10"))
p <- p + xlab(NULL)
p <- p + ylab(NULL)
p <- p + coord_equal(xlim = c(20, 40), ylim = c(50, 60))
print(p)
library(maps)
library(ggplot2)
library(plyr)
# make fake choropleth data
newmexico <- map("county", regions = "new mexico", plot = FALSE, fill = TRUE)
newmexico <- fortify(newmexico)
newmexico <- ddply(newmexico, "subregion", function(df){
mutate(df, fake = rnorm(1))
})
# make standard ggplot map (without geom_map)
p <- ggplot(newmexico, aes(x = long, y = lat, group = group, fill = fake))
p <- p + geom_polygon(colour = "white", size = 0.3)
print(p)
# Now, a fancier map using ggmap...
library(ggmap)
p <- qmap('New Mexico', zoom = 7, maptype = 'satellite', legend = 'topleft')
p <- p + geom_polygon(data = newmexico
, aes(x = long, y = lat, group = group, fill = fake)
, color = 'white'
, alpha = .75, size = .2)
cities <- c("Albuquerque NM", "Las Cruces NM", "Rio Rancho NM", "Santa Fe NM",
"Roswell NM", "Farmington NM", "South Valley NM", "Clovis NM",
"Hobbs NM", "Alamogordo NM", "Carlsbad NM", "Gallup NM", "Los Alamos NM")
cities_locs <- geocode(cities)
cities_locs$city <- cities
p <- p + geom_text(data = cities_locs, aes(label = city)
, color = 'yellow'
, size = 3)
print(p)
setwd("C:/Users/derek/Documents/R Scripts/Map Tutorial")
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, main = "World")
plot(newmap
, xlim = c(-139.3, -58.8) # if you reverse these, the world gets flipped
, ylim = c(13.5, 55.7)
, asp = 1 # different aspect projections
, main = "US from worldmap")
library(ggplot2)
map.world <- map_data(map = "world")
# map = name of map provided by the maps package.
# These include county, france, italy, nz, state, usa, world, world2.
str(map.world)
length(unique(map.world$region))
# how many group polygons (some regions have multiple parts)
length(unique(map.world$group))
p1 <- ggplot(map.world, aes(x = long, y = lat, group = group))
p1 <- p1 + geom_polygon() # fill areas
p1 <- p1 + labs(title = "World, plain")
#print(p1)
p2 <- ggplot(map.world, aes(x = long, y = lat, group = group, colour = region))
p2 <- p2 + geom_polygon() # fill areas
p2 <- p2 + theme(legend.position="none") # remove legend with fill colours
p2 <- p2 + labs(title = "World, colour borders")
#print(p2)
p3 <- ggplot(map.world, aes(x = long, y = lat, group = group, fill = region))
p3 <- p3 + geom_polygon() # fill areas
p3 <- p3 + theme(legend.position="none") # remove legend with fill colours
p3 <- p3 + labs(title = "World, filled regions")
#print(p3)
p4 <- ggplot(map.world, aes(x = long, y = lat, group = group, colour = region))
p4 <- p4 + geom_path() # country outline, instead
p4 <- p4 + theme(legend.position="none") # remove legend with fill colours
p4 <- p4 + labs(title = "World, path outlines only")
#print(p4)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol=2, main="ggmap examples")
grid.arrange(p1, p2, p3, p4, ncol=2, main="ggmap examples")
library(ggmap)
library(mapproj)
map <- get_map(location = "New Mexico", zoom = 7, maptype = "hybrid")
p <- ggmap(map)
p <- p + labs(title = "NM hybrid")
print(p)
map <- get_map(location = "Albuquerque, New Mexico", zoom = 10, maptype = "roadmap")
p <- ggmap(map)
p <- p + labs(title = "Albuquerque watercolor")
print(p)
dat <- read.table(text = "
location lat long
MathStat 35.08396 -106.62410
Ducks 35.08507 -106.62238
SC1Class 35.08614 -106.62349
Biology 35.08243 -106.62296
CSEL 35.08317 -106.62414
", header = TRUE)
map <- get_map(
location = "University of New Mexico", zoom = 16, maptype = "roadmap")
p <- ggmap(map)
p
p <- p + geom_point(data = dat, aes(x = long, y = lat, shape = location, colour = location)
, size = 7)
p
View(dat)
p <- p + geom_point(data = dat, aes(x = long, y = lat, shape = location, colour = location),size = 7)
p
p <- ggmap(map)
p <- p + geom_point(data = dat, aes(x = long, y = lat, shape = location, colour = location),size = 7)
p
p <- p + geom_point(data = dat, aes(x=long, y=lat, shape=location, colour=location),size = 7)
p
p <- ggmap(map)
p <- p + geom_point(data = dat, aes(x=long, y=lat, shape=location, colour=location),size = 7)
p
p <- p + geom_point(data = dat, aes(x=long, y=lat), size = 7)
p
p <- ggmap(map)
p
p <- p + geom_point(data = dat, aes(x=long, y=lat), size = 7)
p
View(dat)
p <- p + geom_point(data=dat, aes(x=long, y=lat), size = 7)
p
p <- ggmap(map)
View(dat)
dat$lat <- as.numeric(dat$lat)
dat.pts <- data.frame(x = dat$long, y = dat$lat)
map <- get_googlemap(
"University of New Mexico" # google search string
, zoom = 16 # larger is closer
, maptype = "satellite" # map type
, markers = dat.pts # markers for map
, path = dat.pts # path, in order of points
, scale = 2
)
p <- ggmap(map
, extent = "device" # remove white border around map
, darken = 0.2 # darken map layer to help points stand out
)
p
p <- p + geom_text(data = dat, aes(x = long, y = lat, label = location)
, hjust = -0.2, colour = "white", size = 6)
p <- p + theme( legend.position = c(0.05, 0.05) # put the legend inside the plot area
, legend.justification = c(0, 0)
, legend.background = element_rect(colour = F, fill = "white")
, legend.key = element_rect(fill = F, colour = F)
, panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
p <- p + labs(title = "UNM Walk around campus")
print(p)
get_googlemap(urlonly = TRUE)
ggmap(get_googlemap())
d <- function(x=-95.36, y=29.76, n,r,a){
round(data.frame(
lon = jitter(rep(x,n), amount = a),
lat = jitter(rep(y,n), amount = a)
), digits = r)
}
df <- d(n=50,r=3,a=.3)
df
map <- get_googlemap(markers = df, path = df,, scale = 2)
ggmap(map)
ggmap(map, fullpage = TRUE) +
geom_point(aes(x = lon, y = lat), data = df, size = 3, colour = "black") +
geom_path(aes(x = lon, y = lat), data = df)
map <- get_googlemap(markers = df, path = df,, scale = 2)
map
ggmap(map)
gc <- geocode("waco, texas")
center <- as.numeric(gc)
ggmap(get_googlemap(center = center, color = "bw", scale = 2), extent = "device")
ggmap(get_googlemap(center, scale = 1), extent = "panel") # pixelated
ggmap(get_googlemap(center, scale = 2), extent = "panel") # fine
map <- get_googlemap(archiving = TRUE)
map <- get_googlemap()
ggmap(map)
map <- get_googlemap(style = c(feature = "all", element = "labels", visibility = "off"))
ggmap(map)
library(ggmap)
library(mapproj)
get_googlemap(urlonly = TRUE)
ggmap(get_googlemap())
# markers and paths are easy to access
d <- function(x=-95.36, y=29.76, n,r,a){
round(data.frame(
lon = jitter(rep(x,n), amount = a),
lat = jitter(rep(y,n), amount = a)
), digits = r)
}
df <- d(n=50,r=3,a=.3)
map <- get_googlemap(markers = df, path = df,, scale = 2)
ggmap(map)
ggmap(map, fullpage = TRUE) +
geom_point(aes(x = lon, y = lat), data = df, size = 3, colour = "black")
library(ggmap)
library(mapproj)
get_googlemap(urlonly = TRUE)
ggmap(get_googlemap())
# markers and paths are easy to access
d <- function(x=-95.36, y=29.76, n,r,a){
round(data.frame(
lon = jitter(rep(x,n), amount = a),
lat = jitter(rep(y,n), amount = a)
), digits = r)
}
df <- d(n=50,r=3,a=.3)
map <- get_googlemap(markers = df, scale = 2)
ggmap(map)
ggmap(map, fullpage = TRUE) +
geom_point(aes(x = lon, y = lat), data = df, size = 3, colour = "black")
library(scales) # for muted graphics
str(crime)
data<-crime
View(data)
violent_crimes <- subset(crime, ((offense != "auto theft")
& (offense != "theft")
& (offense != "burglary")))
violent_crimes$offense <- factor(violent_crimes$offense
, levels = c("robbery", "aggravated assault"
, "rape", "murder"))
violent_crimes <- subset(violent_crimes, ((-95.39681 <= lon)
& (lon <= -95.34188)
& (29.73631 <= lat)
& (lat <= 29.784)))
map <- get_map( location = "Houston TX"
, zoom = 14
, maptype = "roadmap"
, color = "bw" # make black & white so color is data
)
map
p <- ggmap(map)
p
p <- p + geom_point(data = violent_crimes
, aes(x = lon, y = lat, size = offense, colour = offense))
p
p <- p + theme( legend.position = c(0.0, 0.7) # put the legend inside the plot area
, legend.justification = c(0, 0)
, legend.background = element_rect(colour = F, fill = "white")
, legend.key = element_rect(fill = F, colour = F)
, panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
print(p)
theme_set(theme_bw(16))
HoustonMap <- qmap("houston", zoom = 14, color = "bw", legend = "topleft")
HoustonMap +
geom_point(aes(x = lon, y = lat, colour = offense, size = offense),
data = violent_crimes)
HoustonMap +
stat_bin2d(
aes(x = lon, y = lat, colour = offense, fill = offense),
size = .5, bins = 30, alpha = 1/2,
data = violent_crimes
)
p <- ggmap(map)
overlay <- stat_density2d(data = violent_crimes
, aes(x = lon, y = lat, fill = ..level.. , alpha = ..level..)
, size = 2, bins = 4, geom = "polygon")
p <- p + overlay
p <- p + scale_fill_gradient2("Violent Crime Density", low = "white", mid = "yellow", high = "red")
p <- p + scale_alpha(range = c(0.4, 0.75), guide = FALSE)
p <- p + guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
print(p)
p <- p + facet_wrap( ~ day, nrow = 2)
print(p)
print(p)
library(ggmap)
library(mapproj)
get_googlemap(urlonly = TRUE)
ggmap(get_googlemap())
d <- function(x=-95.36, y=29.76, n,r,a){
round(data.frame(
lon = jitter(rep(x,n), amount = a),
lat = jitter(rep(y,n), amount = a)
), digits = r)
}
df <- d(n=50,r=3,a=.3)
View(df)
map <- get_googlemap(markers = df, scale = 2)
ggmap(map)
ggmap(map, fullpage = TRUE) +
geom_point(aes(x = lon, y = lat), data = df, size = 3, colour = "black")
map <- get_googlemap(markers = df, path = df,, scale = 2)
ggmap(map)
ggmap(map, fullpage = TRUE) +
geom_point(aes(x = lon, y = lat), data = df, size = 3, colour = "black") +
geom_path(aes(x = lon, y = lat), data = df)
gc <- geocode("waco, texas")
center <- as.numeric(gc)
ggmap(get_googlemap(center = center, color = "bw", scale = 2), extent = "device")
ggmap(get_googlemap(center, scale = 1), extent = "panel") # pixelated
ggmap(get_googlemap(center, scale = 2), extent = "panel") # fine
map <- get_googlemap(archiving = TRUE)
map <- get_googlemap()
ggmap(map)
map <- get_googlemap(style = c(feature = "all", element = "labels", visibility = "off"))
ggmap(map)
library(scales) # for muted graphics
str(crime)
data<-crime
violent_crimes <- subset(crime, ((offense != "auto theft")
& (offense != "theft")
& (offense != "burglary")))
violent_crimes$offense <- factor(violent_crimes$offense
, levels = c("robbery", "aggravated assault"
, "rape", "murder"))
violent_crimes <- subset(violent_crimes, ((-95.39681 <= lon)
& (lon <= -95.34188)
& (29.73631 <= lat)
& (lat <= 29.784)))
map <- get_map( location = "Houston TX"
, zoom = 14
, maptype = "roadmap"
, color = "bw" # make black & white so color is data
)
p <- ggmap(map)
p <- p + geom_point(data = violent_crimes
, aes(x = lon, y = lat, size = offense, colour = offense))
p <- p + theme( legend.position = c(0.0, 0.7) # put the legend inside the plot area
, legend.justification = c(0, 0)
, legend.background = element_rect(colour = F, fill = "white")
, legend.key = element_rect(fill = F, colour = F)
, panel.grid.major = element_blank()
, panel.grid.minor = element_blank()
, axis.text = element_blank()
, axis.title = element_blank()
, axis.ticks = element_blank()
)
print(p)
View(violent_crimes)
p <- ggmap(map)
overlay <- stat_density2d(data = violent_crimes
, aes(x = lon, y = lat, fill = ..level.. , alpha = ..level..)
, size = 2, bins = 4, geom = "polygon")
p <- p + overlay
p <- p + scale_fill_gradient2("Violent Crime Density", low = "white", mid = "yellow", high = "red")
p <- p + scale_alpha(range = c(0.4, 0.75), guide = FALSE)
p <- p + guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
print(p)
p <- p + facet_wrap( ~ day, nrow = 2)
print(p)
